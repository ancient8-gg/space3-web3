{
  "address": "0x7B3e950827b6da7D4cfF45E5a9Dc92e8201DFad3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "orderId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "BuyTicket",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_orderId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "buyTicket",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa3a5a96d33221ab548769dcccadc01c4338abdab73ec47e10a54fdfa63b08fb2",
  "receipt": {
    "to": null,
    "from": "0xfd3Fc91f2342c2bF3178A5f8BDE3F2967Fc91Df0",
    "contractAddress": "0x7B3e950827b6da7D4cfF45E5a9Dc92e8201DFad3",
    "transactionIndex": 1,
    "gasUsed": "475557",
    "logsBloom": "0x
    "blockHash": "0x6155506c06519ed47b88cb53edf3456c73cc7d51ddf07f465a66a9eeec8e4024",
    "transactionHash": "0xa3a5a96d33221ab548769dcccadc01c4338abdab73ec47e10a54fdfa63b08fb2",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 2223318,
        "transactionHash": "0xa3a5a96d33221ab548769dcccadc01c4338abdab73ec47e10a54fdfa63b08fb2",
        "address": "0x7B3e950827b6da7D4cfF45E5a9Dc92e8201DFad3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000fd3fc91f2342c2bf3178a5f8bde3f2967fc91df0"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x6155506c06519ed47b88cb53edf3456c73cc7d51ddf07f465a66a9eeec8e4024"
      }
    ],
    "blockNumber": 2223318,
    "cumulativeGasUsed": "519384",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0"
  ],
  "numDeployments": 1,
  "solcInputHash": "af6bd4901f8db4d4aa08252f8ae538c8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"orderId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"BuyTicket\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orderId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"buyTicket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gacha/GachaPayment.sol\":\"GachaPayment\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/gacha/GachaPayment.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n// Uncomment this line to use console.log\\n// import \\\"hardhat/console.sol\\\";\\n\\ncontract GachaPayment is Ownable {\\n    uint public fee;\\n\\n    event BuyTicket(\\n        address indexed user,\\n        string indexed orderId,\\n        uint amount,\\n        address tokenAddress\\n    );\\n\\n    constructor(uint _fee) Ownable(msg.sender) {\\n        fee = _fee;\\n    }\\n\\n    function setFee(uint _fee) external onlyOwner {\\n        fee = _fee;\\n    }\\n\\n    function withdraw(address _tokenAddress) external onlyOwner {\\n        if (_tokenAddress == address(0)) {\\n            address payable _owner = payable(owner());\\n            _owner.transfer(address(this).balance);\\n        } else {\\n            IERC20 token = IERC20(_tokenAddress);\\n            uint balance = token.balanceOf(address(this));\\n            token.transfer(owner(), balance);\\n        }\\n    }\\n\\n    function buyTicket(\\n        string memory _orderId,\\n        uint _amount,\\n        address _tokenAddress\\n    ) external payable {\\n        if (_tokenAddress == address(0)) {\\n            require(msg.value == _amount + fee, \\\"Payment is not valid!\\\");\\n        } else {\\n            require(msg.value == fee, \\\"Payment is not valid!\\\");\\n            IERC20 token = IERC20(_tokenAddress);\\n            token.transferFrom(msg.sender, address(this), _amount);\\n        }\\n        emit BuyTicket(msg.sender, _orderId, _amount, _tokenAddress);\\n    }\\n}\\n\",\"keccak256\":\"0x35e8858b45071d27fdc486576f9a5e00f38993bf3143ed18e44b507dae4fe818\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516107fc3803806107fc83398101604081905261002f916100b7565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610067565b506001556100d0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c957600080fd5b5051919050565b61071d806100df6000396000f3fe6080604052600436106100705760003560e01c8063715018a61161004e578063715018a6146100ca5780638da5cb5b146100df578063ddca3f431461010c578063f2fde38b1461013057600080fd5b806351cff8d91461007557806369fe0e2d146100975780636e146f95146100b7575b600080fd5b34801561008157600080fd5b5061009561009036600461053a565b610150565b005b3480156100a357600080fd5b506100956100b236600461055c565b6102b8565b6100956100c536600461058b565b6102c5565b3480156100d657600080fd5b50610095610452565b3480156100eb57600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b34801561011857600080fd5b5061012260015481565b604051908152602001610103565b34801561013c57600080fd5b5061009561014b36600461053a565b610466565b6101586104a1565b6001600160a01b0381166101b057600080546001600160a01b03166040519091506001600160a01b038216904780156108fc02916000818181858888f193505050501580156101ab573d6000803e3d6000fd5b505050565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156101f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021d9190610656565b9050816001600160a01b031663a9059cbb6102406000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af115801561028d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b1919061066f565b5050505b50565b6102c06104a1565b600155565b6001600160a01b038116610330576001546102e09083610691565b341461032b5760405162461bcd60e51b81526020600482015260156024820152745061796d656e74206973206e6f742076616c69642160581b60448201526064015b60405180910390fd5b6103f5565b60015434146103795760405162461bcd60e51b81526020600482015260156024820152745061796d656e74206973206e6f742076616c69642160581b6044820152606401610322565b6040516323b872dd60e01b81523360048201523060248201526044810183905281906001600160a01b038216906323b872dd906064016020604051808303816000875af11580156103ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f2919061066f565b50505b8260405161040391906106b8565b604080519182900382208483526001600160a01b03841660208401529133917f99c41654c68661b38e54a500fd08c65780ad418fcf56e7d5283e097db612e719910160405180910390a3505050565b61045a6104a1565b61046460006104ce565b565b61046e6104a1565b6001600160a01b03811661049857604051631e4fbdf760e01b815260006004820152602401610322565b6102b5816104ce565b6000546001600160a01b031633146104645760405163118cdaa760e01b8152336004820152602401610322565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461053557600080fd5b919050565b60006020828403121561054c57600080fd5b6105558261051e565b9392505050565b60006020828403121561056e57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156105a057600080fd5b833567ffffffffffffffff808211156105b857600080fd5b818601915086601f8301126105cc57600080fd5b8135818111156105de576105de610575565b604051601f8201601f19908116603f0116810190838211818310171561060657610606610575565b8160405282815289602084870101111561061f57600080fd5b8260208601602083013760006020848301015280975050505050506020840135915061064d6040850161051e565b90509250925092565b60006020828403121561066857600080fd5b5051919050565b60006020828403121561068157600080fd5b8151801515811461055557600080fd5b808201808211156106b257634e487b7160e01b600052601160045260246000fd5b92915050565b6000825160005b818110156106d957602081860181015185830152016106bf565b50600092019182525091905056fea2646970667358221220744aefb229567239978fb33a24564ae3742e9f773f7d5ed57d6ae261e1d8d3e064736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063715018a61161004e578063715018a6146100ca5780638da5cb5b146100df578063ddca3f431461010c578063f2fde38b1461013057600080fd5b806351cff8d91461007557806369fe0e2d146100975780636e146f95146100b7575b600080fd5b34801561008157600080fd5b5061009561009036600461053a565b610150565b005b3480156100a357600080fd5b506100956100b236600461055c565b6102b8565b6100956100c536600461058b565b6102c5565b3480156100d657600080fd5b50610095610452565b3480156100eb57600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b34801561011857600080fd5b5061012260015481565b604051908152602001610103565b34801561013c57600080fd5b5061009561014b36600461053a565b610466565b6101586104a1565b6001600160a01b0381166101b057600080546001600160a01b03166040519091506001600160a01b038216904780156108fc02916000818181858888f193505050501580156101ab573d6000803e3d6000fd5b505050565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156101f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021d9190610656565b9050816001600160a01b031663a9059cbb6102406000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af115801561028d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b1919061066f565b5050505b50565b6102c06104a1565b600155565b6001600160a01b038116610330576001546102e09083610691565b341461032b5760405162461bcd60e51b81526020600482015260156024820152745061796d656e74206973206e6f742076616c69642160581b60448201526064015b60405180910390fd5b6103f5565b60015434146103795760405162461bcd60e51b81526020600482015260156024820152745061796d656e74206973206e6f742076616c69642160581b6044820152606401610322565b6040516323b872dd60e01b81523360048201523060248201526044810183905281906001600160a01b038216906323b872dd906064016020604051808303816000875af11580156103ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f2919061066f565b50505b8260405161040391906106b8565b604080519182900382208483526001600160a01b03841660208401529133917f99c41654c68661b38e54a500fd08c65780ad418fcf56e7d5283e097db612e719910160405180910390a3505050565b61045a6104a1565b61046460006104ce565b565b61046e6104a1565b6001600160a01b03811661049857604051631e4fbdf760e01b815260006004820152602401610322565b6102b5816104ce565b6000546001600160a01b031633146104645760405163118cdaa760e01b8152336004820152602401610322565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461053557600080fd5b919050565b60006020828403121561054c57600080fd5b6105558261051e565b9392505050565b60006020828403121561056e57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156105a057600080fd5b833567ffffffffffffffff808211156105b857600080fd5b818601915086601f8301126105cc57600080fd5b8135818111156105de576105de610575565b604051601f8201601f19908116603f0116810190838211818310171561060657610606610575565b8160405282815289602084870101111561061f57600080fd5b8260208601602083013760006020848301015280975050505050506020840135915061064d6040850161051e565b90509250925092565b60006020828403121561066857600080fd5b5051919050565b60006020828403121561068157600080fd5b8151801515811461055557600080fd5b808201808211156106b257634e487b7160e01b600052601160045260246000fd5b92915050565b6000825160005b818110156106d957602081860181015185830152016106bf565b50600092019182525091905056fea2646970667358221220744aefb229567239978fb33a24564ae3742e9f773f7d5ed57d6ae261e1d8d3e064736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 387,
        "contract": "contracts/gacha/GachaPayment.sol:GachaPayment",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6075,
        "contract": "contracts/gacha/GachaPayment.sol:GachaPayment",
        "label": "fee",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}